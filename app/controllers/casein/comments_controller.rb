# Scaffolding generated by Casein v5.2.0.0

module Casein
  class CommentsController < Casein::CaseinController
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_action :needs_admin, except: [:action1, :action2]
    # before_action :needs_admin_or_current_user, only: [:action1, :action2]

    def index
      @casein_page_title = 'Comments'
      @comments = Comment.order(sort_order(:commenter)).paginate page: params[:page]
    end

    def show
      @casein_page_title = 'View comment'
      @comment = Comment.find params[:id]
    end

    def new
      @casein_page_title = 'Add a new comment'
      @comment = Comment.new
    end

    def create
      @comment = Comment.new comment_params

      if @comment.save
        flash[:notice] = 'Comment created'
        redirect_to casein_comments_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new comment'
        render action: :new
      end
    end

    def update
      @casein_page_title = 'Update comment'

      @comment = Comment.find params[:id]

      if @comment.update_attributes comment_params
        flash[:notice] = 'Comment has been updated'
        redirect_to casein_comments_path
      else
        flash.now[:warning] = 'There were problems when trying to update this comment'
        render action: :show
      end
    end

    def destroy
      @comment = Comment.find params[:id]

      @comment.destroy
      flash[:notice] = 'Comment has been deleted'
      redirect_to casein_comments_path
    end

    private

    def comment_params
      params.require(:comment).permit(:commenter, :body, :story_id)
    end
  end
end
